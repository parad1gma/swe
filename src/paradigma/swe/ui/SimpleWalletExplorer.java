/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package paradigma.swe.ui;

import paradigma.swe.lib.swe;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import javax.swing.JTable;

        
/**
 *
 * @author paradigma
 */
public class SimpleWalletExplorer extends javax.swing.JFrame {

    /**
     * Creates new form SimpleWalletExplorer
     */
    public SimpleWalletExplorer() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ScrollPane = new javax.swing.JScrollPane();
        tblswe = new javax.swing.JTable();
        pnlDateWindow = new javax.swing.JPanel();
        btnFilter = new javax.swing.JButton();
        spnFrom = new javax.swing.JSpinner();
        spnTo = new javax.swing.JSpinner();
        pnlLines = new javax.swing.JPanel();
        lblNumberOfLines = new javax.swing.JLabel();
        pnlSelectedLines = new javax.swing.JPanel();
        lblNumberOfSelectedLines = new javax.swing.JLabel();
        pnlAmountReceived = new javax.swing.JPanel();
        lblAmountReceived = new javax.swing.JLabel();
        mnbswe = new javax.swing.JMenuBar();
        mnuFile = new javax.swing.JMenu();
        mniOpen = new javax.swing.JMenuItem();
        mniSeparator = new javax.swing.JPopupMenu.Separator();
        mniExit = new javax.swing.JMenuItem();
        mnuHelp = new javax.swing.JMenu();
        mniAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Simple Wallet Explorer");
        setName("swe"); // NOI18N

        tblswe.setBackground(new java.awt.Color(204, 204, 204));
        tblswe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Time", "Height", "Transaction", "Received"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ScrollPane.setViewportView(tblswe);
        if (tblswe.getColumnModel().getColumnCount() > 0) {
            tblswe.getColumnModel().getColumn(0).setResizable(false);
            tblswe.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblswe.getColumnModel().getColumn(1).setPreferredWidth(70);
            tblswe.getColumnModel().getColumn(2).setResizable(false);
            tblswe.getColumnModel().getColumn(2).setPreferredWidth(20);
            tblswe.getColumnModel().getColumn(3).setResizable(false);
            tblswe.getColumnModel().getColumn(3).setPreferredWidth(400);
            tblswe.getColumnModel().getColumn(4).setPreferredWidth(70);
        }

        pnlDateWindow.setBackground(new java.awt.Color(204, 204, 204));
        pnlDateWindow.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), " date window "));
        pnlDateWindow.setEnabled(false);
        pnlDateWindow.setPreferredSize(new java.awt.Dimension(200, 100));

        btnFilter.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnFilter.setText("Filter");
        btnFilter.setToolTipText("Action");
        btnFilter.setEnabled(false);
        btnFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterActionPerformed(evt);
            }
        });

        spnFrom.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), null, new java.util.Date(), java.util.Calendar.DAY_OF_YEAR));
        spnFrom.setToolTipText("From Date");
        spnFrom.setEnabled(false);

        spnTo.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), null, new java.util.Date(), java.util.Calendar.DAY_OF_YEAR));
        spnTo.setToolTipText("To Date");
        spnTo.setEnabled(false);

        javax.swing.GroupLayout pnlDateWindowLayout = new javax.swing.GroupLayout(pnlDateWindow);
        pnlDateWindow.setLayout(pnlDateWindowLayout);
        pnlDateWindowLayout.setHorizontalGroup(
            pnlDateWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDateWindowLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlDateWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(spnTo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spnFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
            .addGroup(pnlDateWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlDateWindowLayout.setVerticalGroup(
            pnlDateWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDateWindowLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(spnFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(spnTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pnlLines.setBackground(new java.awt.Color(204, 204, 204));
        pnlLines.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), " # of lines"));
        pnlLines.setToolTipText("logfile statistics");
        pnlLines.setEnabled(false);
        pnlLines.setName(""); // NOI18N

        lblNumberOfLines.setText(" ");

        javax.swing.GroupLayout pnlLinesLayout = new javax.swing.GroupLayout(pnlLines);
        pnlLines.setLayout(pnlLinesLayout);
        pnlLinesLayout.setHorizontalGroup(
            pnlLinesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLinesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblNumberOfLines, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlLinesLayout.setVerticalGroup(
            pnlLinesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLinesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblNumberOfLines)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlSelectedLines.setBackground(new java.awt.Color(204, 204, 204));
        pnlSelectedLines.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), " # of selected lines"));
        pnlSelectedLines.setToolTipText("logfile statistics");
        pnlSelectedLines.setEnabled(false);

        lblNumberOfSelectedLines.setText(" ");

        javax.swing.GroupLayout pnlSelectedLinesLayout = new javax.swing.GroupLayout(pnlSelectedLines);
        pnlSelectedLines.setLayout(pnlSelectedLinesLayout);
        pnlSelectedLinesLayout.setHorizontalGroup(
            pnlSelectedLinesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSelectedLinesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblNumberOfSelectedLines, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );
        pnlSelectedLinesLayout.setVerticalGroup(
            pnlSelectedLinesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSelectedLinesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblNumberOfSelectedLines)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlAmountReceived.setBackground(new java.awt.Color(204, 204, 204));
        pnlAmountReceived.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), " coins received "));
        pnlAmountReceived.setToolTipText("logfile statistics");
        pnlAmountReceived.setEnabled(false);

        lblAmountReceived.setText(" ");

        javax.swing.GroupLayout pnlAmountReceivedLayout = new javax.swing.GroupLayout(pnlAmountReceived);
        pnlAmountReceived.setLayout(pnlAmountReceivedLayout);
        pnlAmountReceivedLayout.setHorizontalGroup(
            pnlAmountReceivedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAmountReceivedLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAmountReceived, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );
        pnlAmountReceivedLayout.setVerticalGroup(
            pnlAmountReceivedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAmountReceivedLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAmountReceived)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mnuFile.setText("File");

        mniOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        mniOpen.setText("Open");
        mniOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniOpenActionPerformed(evt);
            }
        });
        mnuFile.add(mniOpen);
        mnuFile.add(mniSeparator);

        mniExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        mniExit.setText("Exit");
        mniExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniExitActionPerformed(evt);
            }
        });
        mnuFile.add(mniExit);

        mnbswe.add(mnuFile);

        mnuHelp.setText("Help");

        mniAbout.setText("About");
        mniAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniAboutActionPerformed(evt);
            }
        });
        mnuHelp.add(mniAbout);

        mnbswe.add(mnuHelp);

        setJMenuBar(mnbswe);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(ScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 750, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlSelectedLines, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlLines, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlDateWindow, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlAmountReceived, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 579, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlDateWindow, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlLines, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlSelectedLines, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlAmountReceived, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void mniExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_mniExitActionPerformed

    private void deleteAllTableRows(JTable table) {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        while( model.getRowCount() > 0 ){
            model.removeRow(0);
        }
    }
    
    private void mniOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniOpenActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            swe.SelectedFile = fileChooser.getSelectedFile();
            System.out.println("Selected file: " + swe.SelectedFile.getAbsolutePath());
            // swe.infoBox (swe.SelectedFile.getAbsolutePath(), "OpenDialog");
            swe.ReadLogFile();
            deleteAllTableRows(tblswe);
            DefaultTableModel model = (DefaultTableModel) tblswe.getModel ();
            for (String[] selectedLine : swe.selectedLines) {
                model.addRow(new String[]{selectedLine[0], selectedLine[1], selectedLine[3], selectedLine[5], selectedLine[7]});
            }
            spnFrom.setEditor(new javax.swing.JSpinner.DateEditor(spnFrom, "yyyy-MMM-dd"));
            spnTo.setEditor(new javax.swing.JSpinner.DateEditor(spnTo, "yyyy-MMM-dd"));
            
            String pattern = "yyyy-MMM-dd";
            SimpleDateFormat dateFormat = new SimpleDateFormat(pattern, Locale.US);

            try {
                Date date = dateFormat.parse(tblswe.getValueAt(0, 0).toString());
                spnFrom.setEnabled(true);
                spnFrom.setValue(date);
            } catch (ParseException e) {
            }
            
            try {
                Date date = dateFormat.parse(tblswe.getValueAt(tblswe.getRowCount()-1, 0).toString());
                spnTo.setEnabled(true);
                spnTo.setValue(date);
            } catch (ParseException e) {
            }
            
            btnFilter.setEnabled(true);
            pnlDateWindow.setEnabled(true);
            
            pnlLines.setEnabled(true);
            pnlSelectedLines.setEnabled(true);
            pnlAmountReceived.setEnabled(true);
            
            lblNumberOfLines.setText(Integer.toString(swe.getNumberOfLines()));
            lblNumberOfSelectedLines.setText(Integer.toString(swe.getNumberOfSelectedLines()));
            lblAmountReceived.setText(Float.toString(swe.getAmountReceived()));
        }
    }//GEN-LAST:event_mniOpenActionPerformed

    private void mniAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniAboutActionPerformed
        new About(this, true).setVisible(true);
    }//GEN-LAST:event_mniAboutActionPerformed

    private void btnFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterActionPerformed
        /*
        Date date = new Date();
        SpinnerDateModel sm = new SpinnerDateModel(date, null, null, Calendar.MINUTE);

        JSpinner spinner = new JSpinner(sm);
        JSpinner.DateEditor de = new JSpinner.DateEditor(spinner, "hh:mm a");
        de.getTextField().setEditable( false );
        spinner.setEditor(de);
        */
        
        String pattern = "yyyy-MMM-dd";
        SimpleDateFormat dateFormat = new SimpleDateFormat(pattern, Locale.US);
        
        try {
            Date fromDate = dateFormat.parse(dateFormat.format(spnFrom.getValue()));
            Date toDate = dateFormat.parse(dateFormat.format(spnTo.getValue()));
            
            deleteAllTableRows(tblswe);
            int selectedLines = 0;
            float amountReceived = 0;
            DefaultTableModel model = (DefaultTableModel) tblswe.getModel ();
            for (String[] selectedLine : swe.selectedLines) {
                Date currentDate = dateFormat.parse(selectedLine[0]);
                if (!((currentDate.before(fromDate)) || (currentDate.after(toDate)))) {
                    selectedLines++;
                    model.addRow(new String[]{selectedLine[0], selectedLine[1], selectedLine[3], selectedLine[5], selectedLine[7]});
                    try {                           
                        amountReceived += Float.parseFloat(selectedLine[7]);
                    }
                    catch (NumberFormatException nfe) {
                        System.out.println("NumberFormatException: " + nfe.getMessage());
                    }                        
                }
            }
            lblNumberOfSelectedLines.setText(Integer.toString(selectedLines));
            lblAmountReceived.setText(Float.toString(amountReceived));
        } catch (ParseException e) {
        }
        
        /*
        String pattern = "dd-MMM-yyyy";
        SimpleDateFormat format = new SimpleDateFormat(pattern);
              
        try {
            Date date = format.parse("31-jul-2006");
            spnFrom.setEnabled(true);
            spnFrom.setValue(date);
        } catch (ParseException e) {
            e.printStackTrace();
        }
        
             
        lblDate.setText(format.format(spnFrom.getValue()));
        
        */
    }//GEN-LAST:event_btnFilterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SimpleWalletExplorer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SimpleWalletExplorer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SimpleWalletExplorer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SimpleWalletExplorer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SimpleWalletExplorer().setVisible(true);
            }
        });
        
        System.out.println("User folder: " + swe.userFolder);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollPane;
    private javax.swing.JButton btnFilter;
    private javax.swing.JLabel lblAmountReceived;
    private javax.swing.JLabel lblNumberOfLines;
    private javax.swing.JLabel lblNumberOfSelectedLines;
    private javax.swing.JMenuBar mnbswe;
    private javax.swing.JMenuItem mniAbout;
    private javax.swing.JMenuItem mniExit;
    private javax.swing.JMenuItem mniOpen;
    private javax.swing.JPopupMenu.Separator mniSeparator;
    private javax.swing.JMenu mnuFile;
    private javax.swing.JMenu mnuHelp;
    private javax.swing.JPanel pnlAmountReceived;
    private javax.swing.JPanel pnlDateWindow;
    private javax.swing.JPanel pnlLines;
    private javax.swing.JPanel pnlSelectedLines;
    private javax.swing.JSpinner spnFrom;
    private javax.swing.JSpinner spnTo;
    private javax.swing.JTable tblswe;
    // End of variables declaration//GEN-END:variables
}
